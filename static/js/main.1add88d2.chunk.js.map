{"version":3,"sources":["components/Song.js","components/Player.js","util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","alt","name","src","cover","artist","Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","chillHop","audio","uuidv4","LibrarySong","changeSongHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useState","data","volume","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1add88d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Song = ({ currentSong })=>{\r\n\r\n    return(\r\n        <div className=\"song-container\" >\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  //UseEffect Update List\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  //Event Handlers\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    //Forward BAck\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n     // activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n       // activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();  \r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop(){\r\n\r\n    return [\r\n\r\n        {\r\n            name: \"Bravo\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/49da9d86e294b025a386f0366188c4429b5562a0-1024x1024.jpg\",\r\n            artist: \"Moose Dawa\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12997\",\r\n            color: [ \"#393940\", \"#D19375\"],\r\n            id: uuidv4(),\r\n            active: true, \r\n        },\r\n\r\n        {\r\n            name: \"Longing\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n            artist: \"Makzo\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11777\",\r\n            color: [ \"#31508E\", \"#E78B73\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n\r\n        {\r\n            name: \"Today Feels Like Everyday\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n            artist: \"Mama Aiuto\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12128\",\r\n            color: [ \"#101D25\", \"#1B5968\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n\r\n        {\r\n            name: \"Splendour\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg\",\r\n            artist: \"Aarigod\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=13013\",\r\n            color: [ \"#5F7C3D\", \"#AAC370\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n\r\n        {\r\n            name: \"ebb//flo\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/5c2d5b05dfc98afb5ed850ca918f732445b8ca1e-1024x1024.jpg\",\r\n            artist: \"invention_\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8741\",\r\n            color: [ \"#513C61\", \"#6E8DA1\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n\r\n        {\r\n            name: \"Sugarless\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n            artist: \"The Field Tapes, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11243\",\r\n            color: [ \"#363B56\", \"#95B0B0\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n\r\n        {\r\n            name: \"Going Back\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\r\n            color: [ \"#335561\", \"#DDE2E8\"],\r\n            id: uuidv4(),\r\n            active: false, \r\n\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import React from 'react'\r\n\r\nconst LibrarySong = ({songs, setCurrentSong, song, setSongs, id, isPlaying, audioRef }) =>{\r\n\r\n    const changeSongHandler = async () => {\r\n        const selectedSong = songs.filter((state) => state.id === id )\r\n        await setCurrentSong(selectedSong[0]);\r\n        //add active\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n              return {\r\n                ...song,\r\n                active: true,\r\n              };\r\n            } else {\r\n              return {\r\n                ...song,\r\n                active: false,\r\n              };\r\n            }\r\n          });\r\n          setSongs(newSongs);\r\n          if (isPlaying) audioRef.current.play();      \r\n    }\r\n\r\n\r\n    return(\r\n        <div onClick={changeSongHandler} className={`library-song ${song.active ? 'selected': \"\"}`} >\r\n        <img alt={song.name} src={song.cover}></img>\r\n        <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs,libraryStatus  }) =>{\r\n    return(\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\r\n            <h1>Library</h1>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => \r\n                 <LibrarySong \r\n                    audioRef= {audioRef} \r\n                    songs={songs} \r\n                    setSongs={setSongs}\r\n                    id = {song.id}\r\n                    key = {song.id}\r\n                    setCurrentSong={setCurrentSong} \r\n                    isPlaying= {isPlaying}\r\n                    song={song} /> ) }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  const openLibraryHandler = () => {\r\n    setLibraryStatus(!libraryStatus);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <h1>Coding Music</h1>\r\n      <button\r\n        className={libraryStatus ? \"library-active\" : \"\"}\r\n        onClick={openLibraryHandler}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;","\nimport {useState, useRef} from 'react'\nimport './styles/app.scss'\nimport Song from './components/Song'\nimport Player from './components/Player'\nimport data from './util'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\n\nfunction App() {\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [ songInfo, setSongInfo ] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0,\n})\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  //ref\n  const audioRef = useRef(null);\n  //Event handler\n  const timeUpdateHandler = (e) =>{\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n\n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n\n  setSongInfo({...songInfo, \n                currentTime: current, \n                duration,\n                animationPercentage: percentage,\n                volume: e.target.volume,})\n}\n\nconst songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n  await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n  if (isPlaying) audioRef.current.play();  \n  return;\n};\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}> \n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong ={currentSong} />\n      <Player\n          songs = {songs}\n          setSongs={setSongs}\n          audioRef={audioRef}\n          setCurrentSong={setCurrentSong}\n          songInfo={songInfo}\n          setSongInfo= {setSongInfo} \n          audioRef={audioRef}\n          setIsPlaying = {setIsPlaying} \n          isPlaying= {isPlaying} \n          currentSong ={currentSong} />\n      <Library \n          libraryStatus={libraryStatus}\n          setSongs = {setSongs}\n          isPlaying= {isPlaying}\n          setCurrentSong={setCurrentSong}\n          songs= {songs} \n          audioRef= {audioRef}\n          /> \n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedMetadata= {timeUpdateHandler}\n        ref={audioRef} \n        onEnded={songEndHandler}\n        src={currentSong.audio}>\n      </audio>  \n      <h1> &copy; Sharmil Adroja </h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}